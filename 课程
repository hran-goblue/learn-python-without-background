——————————————
### 第一课 ###
——————————————

---- print()将结果打印出来 ----

>>> print ('hello world')
hello world

>>>print (5+8)
13

>>>print ('university of michigan'+' go blue')
univeristy of michigan go blue

--- 也可以 print（‘字符串’*3） -- 打印3次



——————————————
### 第二课 ###
——————————————
--- 概念 --- 
赋值 “=“  ； 相等 ”==“ ###一个等号是赋值，两个等号才是相等
bif：built-in functions 内置函数
python 是一个 大小写敏感 的脚本语言. 所以 abc和ABC是两个不同的东西

### function ###

dir(__builtins__) 可以现实python所有的内置函数。（先后都是两个下弧线）

help(内置函数) 可以现实内置函数如何使用

input() 可以将你输入的字符存在缓存中

if xxx :     ###条件判断，不要忘记“：”哦
  xxxxxx
else:
  xxxxxx

动动手：
1. 编写程序：hello.py，要求用户输入姓名并打印“你好，姓名！”



——————————————
### 第三课 ###
——————————————
变量：把一个值赋值给一个名字时，他会存在内存中，这种行为叫做“给变量赋值”，这个值叫做变量，这个名字叫做变量名。
不过python与大多数语言的不同，他并不是把值存在变量中，而更像是把名字贴在值上。
所以有人会说，python没有变量只有名字
--------------------

转义符“\”
>>>print('let\'s go')
let's go

str = 'c:\now'
>>>str
'c:\now'
>>>print(str)
c
ow               --- 只有用到print()时才会打出格式，并且不带‘’

------------------------

原始字符串，在字符串前加r，就不需要转义符了。
>>>str= r'c:\now\balabala\a'
>>>print(str)
c:\now\balabala\a
--- 但原始字符串最后不能加“\”

-------------------------------------
长字符串
可以用三重引号来标识
>>>str='''
a,
b,
c,
d......
'''
>>>str
a,\nb,\n,c\n,d......
>>>print(str)
a,
b,
c,
d......        ---- 只有print才会打印出格式哦



——————————————
### 第四课 ###
——————————————

！=  表示不等于
-----------------------------
--- if判断 ---
if 条件：
  条件为真执行的操作
else：
  条件为假执行的操作             ### 记得缩进和”：” ###


### while判断 ###
while 条件：
  操作                           ### while 条件为真时，执行操作 ###
  
---------------------------------
randint() 返回一个随机整数/// 要提前用 import random导入random模块
randint(1,10) 在1到10之间取随机数


——————————————
### 第五课 ###
——————————————
--- 数据类型 ---
数值类型：
整型（没有小数点）、
浮点型（有小数点）、
布尔（特殊的整型，只有1，0；1=ture，false=0）、
e记法（不是一个数据类型，是一种记数方法，其实就是科学记数法）（浮点型）（2.5e11 = 2.5*10^11）

--- 数据类型转换 ---
int() 转换为整型。如果是小数会向下取整，直接砍掉小数点后边。
float() 转换为浮点型。
str() 转换为字符串.

--- 获得数据类型信息 ---
isinstance()
>>>isinstance(a,str)
true
>>>isinstance(200,float)
false
>>>isinstance(2.5,bool)
false

——————————————
### 第六课 ###
——————————————
--- 算数操作符 ---
+、—、*、/、%、**、//、+=、-=......

>>>a=b=c=d=10
>>>print(a += 3)         ---相当于 a = a + 3,同理—=、*=......
13

// --- 地板除，结果只保留整数（向下取整）
%  --- 取余数，结果只保留余数
** --- 幂运算，3**2 = 9

---比较操作符 ---
<, <=, >, >=, ==, !=
>>> 4<5<6
true

--- 逻辑操作符 ---
and, or, not


--- 优先级 ---
幂运算 -> 正负号 -> 算数操作符 -> 比较操作符 -> 逻辑操作符
先加减再乘除，有括号先算括号
逻辑操作符优先级 not > and > or



——————————————
### 第七课 ###
——————————————
--- 分支&循环 ---
--- 分支
if a:
    A
elif b:
    B
else c:
    C

--- 另一种if else条件表达式：
if a:
    A        ------   相当于 A if a else B
else:
    B
    
--- 循环
while 条件：
    循环体 （一直循环直到条件为false）
    continue (终止本轮循环，跳至最初条件判断阶段)
    break  (终止)
    
    
for 目标 in 表达式：
    循环体
>>> for i in 'fishc':
        print(i,end=' ')   ----- end = '' 以‘ ’结尾
f i s h c         

--- 几个函数 ---
len() --- 变量长度
range() --- range([start,]stop[,step = 1]) --- []表示非必要参数，[]里的“=”表示默认值，不输入start参数则从0开始
                                           --- 输出不包含最stop：list(range(5))=[0,1,2,3,4]

--- 断言 ---
assert 当断言后边的条件为假时，程序中断并抛出AssertionError。也就是说，断言必须为真。
一般用来设置检查点。当需要确保程序中的某一个条件为真才能让程序正常工作时，可以在这里设置一个检查点。



——————————————
### 第八课 ###
——————————————
--- 列表 ---
mix = [a, 'b', 1, o.1, [another list], object]
len(mix) = 6         --- len()在这里表示元素数量
mix.append()         --- 向mix列表末端添加元素,一次只能添加一个元素
mix.extend()         --- 参数为一个列表。用一个列表扩展另一个列表：mix.extend([c,d])，mix就会多出这两个元素
mix.insert(位置，元素) --- 在特定位置插入特定元素。ps：列表的索引值从0开始记
mix.remove()         --- 移除一个元素
del mix[1]           --- del是一个语句，不是函数也不是方法。也可以把整个mix列表删除
mix.pop(索引值)       --- 返回并删除索引值所指向的元素。如果不带参数，就会返回并删除最后一个值
mix[1:3]             --- 返回['b',1]，切片功能, 原列表不发生改变。ps: mix2=mix[:],拷贝一个相同的列表。拷贝和赋值不一样哦！
mix.count()          --- 返回某一元素出现多少次
mix.index()          --- 返回某一元素的索引值
mix.reverse()        --- 整个列表进行翻转
mix.sort()           --- 列表从小至大排序并返回 mix.sort(reverse = True),从大至小排序


--- 比较运算符
>>>list1=[1,4]
>>>list2=[5,0]
>>>list1 > list2
false              --- 从第0个元素开始比较。

--- 拼接&重复&in
>>>list1 + list2
[1,4,5,0]
>>>list1 * 3
[1,4,1,4,1,4]
>>> 4 in list1
true
>>> 4 in [[list1],[list2]]
false
>>> 4 in [[list1],[list2]][1]
true
>>> [[list1],[list2]][1][1]
4



——————————————
### 第九课 ###
——————————————
--- 元组 ---
元组内的元素不可增删改，但可以利用切片并赋值来更新。
>>>tuple1(1,2,3,4,5,6)
索引值，切片 和列表一样
列表的标志是[]，元组的标志是“，” 所以创建一个只有一个元素的元组 temp = (1,) 要加逗号，甚至不用括号。
                            创建空元组 temp=()
>>> 8 * (8)
64
>>> 8 * (8,)
(8,8,8,8,8,8,8,8)
>>>tuple1 = tuple[:3] + (0,) + tuple(3:)
>>>tuple1
(1,2,3,0,4,5,6)                --- 原来的tuple已经不在了



________________
### 第十课 ###
————————————————
--- 字符串 ---
字符串就像单字符组成的元组
也可以切片 [:]
可以索引
比较操作符、逻辑操作符、成员操作符(in\not in)都可以使用。

--- 字符串的方法 ---
>>> xx = 'xiao xie'

xx.capitalize()                               --- 开头字母变大写。xx.capitalize(); xx='Xiao xie'
xx.casefold()                                 --- 所有字符改小写
xx.center(width)                              --- 居中，width使用空格填充至长度为width的新字符串。
xx.count(sub,[,start[,end]])                  --- 返回sub在字符里出现的次数，start和end 表示范围。
xx.encode(encoding ='utf-8',errors='stricts') --- 以encoding制定的编码格式对字符串进行编码
xx.endwith(sub[,start[,end]])                 --- 检查字符是否以sub结尾，返回true或者false
xx.expandtab([tabsize = 8])                   --- 把字符串中的\转换为空格，默认值为8
xx.find(sub[,start[,end]])                    --- 检查是否含有字符sub如果有就返回他的索引值，没有就返回-1
xx.index(sub[,start[,end]])                   --- 返回字符sub的索引值，如果没有会出错
xx.isalnum()                                  --- 检查字符串是否含用字符（字母或数字）,空格不算字符。
xx.isalpha()                                  --- 检查字符是否都是字母
xx.islower()                                  --- 检查字符串是否都是小写字母
xx.isdecimal()                                --- 检查字符串是否都是十进制数字
xx.isdigit()                                  --- 检查字符是否都是数字
xx.isnumeric()                                --- 检查字符串是否只包含数字(目前我还不知道和isdecimal有什么区别)
xx.isdecimal()                                --- 检查字符串是否都是十进制数字
xx.isspance()                                 --- 检查字符串是不是只包含空格
xx.istitle()                                  --- 检查字符是否所有单词都是开头大写（像标题一样）
xx.isupper()                                  --- 检查字符是否都是大写
xx.join(sub)                                  --- 以字符串作为分隔符，插入到sub中所有的字符之间
xx.ljust(width)                               --- 左对齐
xx.lower()                                    --- 全部字符转换为小写
xx.strip([char])                              --- 去除前后指定字符，默认为空格  
xx.lstrip()                                   --- 去掉字符串左边的所有空格
xx.partition(sub)                             --- 找到字符sub，并把整个字符串以sub分为前中后三部分
xx.replace(old,new[,count])                   --- 把字符串中的old子字符串替换为new，替换不超过count次
xx.rfind(sub[,start[,end]])                   --- 从右边开始查找
xx.split(sep=None,maxsplit=-1)                --- 默认以空格为条件切片
xx.spiltlines()                               --- 按照‘\n’切片
xx.startwith(sub[,start[,end]]))              --- 检查是否以sub开头
xx.swapcase()                                 --- 翻转大小写
xx.zfill(width)                               --- 右对齐，前面用0填充至width
xx.translate(table)                           --- 根据table规则转换字符,用str.maketrans('a','b')制定转换表

--- 字符串格式化 ---
>>> '{0}aaa{1}bbb{3}ccc'.format('A','B','C')
AaaaBbbbCccc
>>> '{a}qqq{b}eee{c}rrr'.format(a ='A',b= 'B',c = 'C')
AqqqBeeeCrrr                                               --- 可以把位置参数和关键字参数混合使
                                                           --- 但是位置位置参数必须在关键字之前
>>> '{0:.1f}{1}'.format(27.456,'GB')
'27.5GB'                          --- ":"表示格式化符号的开始,.1表示保留一位，f浮点数（四舍五入）,{1}位置参数

--- 格式化字符 % ---
>>> '%s %s %s' % (a,b,c)
a b c
还有 %c, %d, %o, %x, %X, %f, %e, %E, %g, %G

--- 辅助指令 ---
m.n 最小总长度m，n位小数
-   --- 左对齐。
+   --- 在正数前显示 +
0   --- 用0代替空格
#   --- 八进制前面显示0x

--- 转义符 \ ---
\'    --- '
\"    --- "
\\    --- \
\a系统警报，\b退格，\n换行，\t横向制表，\v纵向制表，\r回车，\f换页，\o八进制，\x十六进制，\0 空字符



________________
### 第十一课 ###
————————————————
--- 序列 ---
list, tuple, string都可以算作是序列，所以他们有
共同点 --- 有索引值，从0开始，可以切片，有很多共同操作符
--- 几个函数 ---
list(), tuple(), max(), min(), len(), sum(),
sorted(), reversed(), enumerate(), zip()

>>> a = [a, b, c, d, e, f]
>>> b = [1, 2, 3, 4]
>>> list( enumerate(a) )
[(o,a),(1,b),(2,c),(3,d)]
>>> list( zip(a,b) )
[(a,1),(b,2),(c,3),(d,4)]
